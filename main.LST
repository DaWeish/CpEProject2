C51 COMPILER V6.02  MAIN                                                                   12/09/2014 20:31:41 PAGE 1   


C51 COMPILER V6.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE .\main.c DEBUG OBJECTEXTEND

stmt level    source

   1          #include "reg932.h"
   2          #include "uart.h"
   3          
   4          #include "note_periods.h"
   5          
   6          #define OSCFREQ 7372800
   7          
   8          #define TICK_HIGH 0xfe
   9          #define TICK_LOW 0x8f
  10          
  11          //DEFINE all buttons(labeled top left horizantally to buttom right)
  12          #define BUTTON1 P2^0;
  13          #define BUTTON2 P0^1;
  14          #define BUTTON3 P2^3;
  15          #define BUTTON4 P0^2;
  16          #define BUTTON5 P1^4;
  17          #define BUTTON6 P0^0;
  18          #define BUTTON7 P2^1;
  19          #define BUTTON8 P0^3;
  20          #define BUTTON9 P2^2;
  21          
  22          // Tempo is beats per minute
  23          // Note duration is specified in 32nd notes
  24          unsigned char tempo;
  25          unsigned int note_durr_factor;
  26          
  27          sbit speaker = P1^7;
  28          
  29          
  30          unsigned char* note_ptr;
  31          unsigned char* durr_ptr;
  32          
  33          unsigned char songSize = 0;
  34          unsigned char currNote = 0;
  35          
  36          unsigned int noteTime = 0;
  37          
  38          unsigned char mode = 0;
  39          
  40          bit looping = 0;
  41          	
  42          void timer1_tone(void) interrupt 3 using 3
  43          {
  44   1      	TH1 = notes[note_ptr[currNote]] >> 8;
  45   1      	TL1 = notes[note_ptr[currNote]] & 0x00ff;
  46   1      	speaker = ~speaker;
  47   1      
  48   1      }
  49          	
  50          void timer0_durr(void) interrupt 1 using 3 
  51          {
  52   1      	if (noteTime > 0) // still playing the note, reset timer
  53   1      	{
  54   2      		TH0 = -(TICK_HIGH);
  55   2      		TL0 = -(TICK_LOW);
C51 COMPILER V6.02  MAIN                                                                   12/09/2014 20:31:41 PAGE 2   

  56   2      		noteTime--;
  57   2      	}
  58   1      	else
  59   1      	{
  60   2      		if (currNote >= songSize)
  61   2      		{
  62   3      			currNote = 0;
  63   3      			if (!looping)
  64   3      			{
  65   4      				TR1 = 0;
  66   4      				TR0 = 0;
  67   4      			}
  68   3      		}
  69   2      		else
  70   2      		{
  71   3      			currNote++;
  72   3      		}
  73   2      		
  74   2      		TH0 = -(TICK_HIGH);
  75   2      		TL0 = -(TICK_LOW);
  76   2      		noteTime = note_durr_factor * durr_ptr[currNote];
  77   2      		TH1 = notes[note_ptr[currNote]] >> 8;
  78   2      		TL1 = notes[note_ptr[currNote]] & 0x00ff;
  79   2      	}
  80   1      }
  81          
  82          void playSong(unsigned char* song, unsigned char* durr, unsigned char sizeOfSong, bit loop);
  83          
  84          sbit light = P0^6;
  85          void main()
  86          {
  87   1      	P0M1 = 0x00;
  88   1      	P0M2 = 0x00;
  89   1      	P1M1 = 0x00;
  90   1      	P1M2 = 0x00;
  91   1      	light = 0;
  92   1      	tempo = 60;
  93   1      	note_durr_factor  = (60*10000)/(32*tempo);
  94   1      	
  95   1      //	uart_init();
  96   1      	  
  97   1      	playSong(song1, durr1, song1Size, 1);
  98   1      
  99   1      	while (1)
 100   1      	{
 101   2      		
 102   2      	}
 103   1      
 104   1      /*	switch(mode)
 105   1      	{
 106   1      		case 0:
 107   1      			for(;;)
 108   1      			{
 109   1      				playSong1();
 110   1      				
 111   1      				if(!BUTTON7)
 112   1      				{//get out if the mode button is pressed
 113   1      					mode++;
 114   1      					break;
 115   1      				}
 116   1      			}
 117   1      			break;
C51 COMPILER V6.02  MAIN                                                                   12/09/2014 20:31:41 PAGE 3   

 118   1      			
 119   1      			case 1:
 120   1      				for(;;)
 121   1      				{
 122   1      					playSong2();
 123   1      					
 124   1      					if(BUTTON7)
 125   1      					{//get out if the mode button is pressed
 126   1      						mode++;
 127   1      						break;
 128   1      					}
 129   1      				}
 130   1      			
 131   1      			case 2:
 132   1      				for(;;)
 133   1      				{
 134   1      					playSong3();
 135   1      					
 136   1      					if(BUTTON7)
 137   1      					{//get out if the mode button is pressed
 138   1      						mode++;
 139   1      						break;
 140   1      					}
 141   1      				}
 142   1      			default:
 143   1      				mode = 0;
 144   1      		}
 145   1      	
 146   1      	
 147   1      	}*/
 148   1      
 149   1      	return;
 150   1      }
 151          
 152          void playSong(unsigned char* song, unsigned char* durr, unsigned char sizeOfSong, bit loop)
 153          {
 154   1      	// Set up timer and interrupts
 155   1      	TMOD = 0x11;
 156   1      	IEN0 = IEN0 | 0x8A;
 157   1      	looping = loop;
 158   1      	currNote = 0;
 159   1      	songSize = sizeOfSong;
 160   1      	note_ptr = song;
 161   1      	durr_ptr = durr;
 162   1      	
 163   1      	TH0 = -(TICK_HIGH);
 164   1      	TL0 = -(TICK_LOW);
 165   1      	noteTime = note_durr_factor * durr_ptr[currNote];
 166   1      	TH1 = notes[note_ptr[currNote]] >> 8;
 167   1      	TL1 = notes[note_ptr[currNote]] & 0x00ff;
 168   1      	
 169   1      	TR0 = 1;
 170   1      	TR1 = 1;
 171   1      }
 172          
 173          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    395    ----
   CONSTANT SIZE    =     27    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V6.02  MAIN                                                                   12/09/2014 20:31:41 PAGE 4   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
